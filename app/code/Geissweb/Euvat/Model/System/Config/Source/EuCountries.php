<?php
/**
 * ||GEISSWEB| EU VAT Enhanced
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the GEISSWEB End User License Agreement
 * that is available through the world-wide-web at this URL: https://www.geissweb.de/legal-information/eula
 *
 * DISCLAIMER
 *
 * Do not edit this file if you wish to update the extension in the future. If you wish to customize the extension
 * for your needs please refer to our support for more information.
 *
 * @copyright   Copyright (c) 2015 GEISS WeblÃ¶sungen (https://www.geissweb.de)
 * @license     https://www.geissweb.de/legal-information/eula GEISSWEB End User License Agreement
 */

namespace Geissweb\Euvat\Model\System\Config\Source;

use Geissweb\Euvat\Helper\Configuration;
use Magento\Framework\Data\OptionSourceInterface;
use Magento\Directory\Model\ResourceModel\Country\CollectionFactory;

/**
 * Class EuCountries provides option array
 */
class EuCountries implements OptionSourceInterface
{
    /**
     * @var CollectionFactory
     */
    public $countryCollectionFactory;

    /**
     * @var Configuration
     */
    private $configHelper;

    /**
     * EuCountries constructor.
     *
     * @param Configuration     $configHelper
     * @param CollectionFactory $countryCollectionFactory
     */
    public function __construct(
        \Geissweb\Euvat\Helper\Configuration $configHelper,
        CollectionFactory $countryCollectionFactory
    ) {
        $this->countryCollectionFactory = $countryCollectionFactory;
        $this->configHelper = $configHelper;
    }

    /**
     * Options getter
     *
     * @return array
     */
    public function toOptionArray(): array
    {
        return $this->countryCollectionFactory->create()
              ->addCountryCodeFilter($this->configHelper->getEuCountries(), 'iso2')
              ->loadData()
              ->toOptionArray(__('-- None --'));
    }

    /**
     * Get options in "key-value" format
     *
     * @return array
     */
    public function toArray(): array
    {
        return $this->configHelper->getEuCountries();
    }
}
