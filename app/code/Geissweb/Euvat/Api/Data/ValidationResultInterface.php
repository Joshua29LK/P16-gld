<?php
/**
 * ||GEISSWEB| EU VAT Enhanced
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the GEISSWEB End User License Agreement
 * that is available through the world-wide-web at this URL: https://www.geissweb.de/legal-information/eula
 *
 * DISCLAIMER
 *
 * Do not edit this file if you wish to update the extension in the future. If you wish to customize the extension
 * for your needs please refer to our support for more information.
 *
 * @copyright   Copyright (c) 2015 GEISS Weblösungen (https://www.geissweb.de)
 * @license     https://www.geissweb.de/legal-information/eula GEISSWEB End User License Agreement
 */

namespace Geissweb\Euvat\Api\Data;

use Magento\Framework\Api\ExtensibleDataInterface;

/**
 * This interface describes the validation result from the services
 */
interface ValidationResultInterface extends ExtensibleDataInterface
{
    const KEY_VAT_ID = 'vat_id';
    const KEY_VAT_IS_VALID = 'vat_is_valid';

    const KEY_VAT_REQUEST_SUCCESS = 'vat_request_success';
    const KEY_VAT_REQUEST_ID = 'vat_request_id';
    const KEY_VAT_REQUEST_DATE = 'vat_request_date';

    const KEY_VAT_TRADER_NAME = 'vat_trader_name';
    const KEY_VAT_TRADER_ADDRESS = 'vat_trader_address';
    const KEY_VAT_TRADER_COMPANY_TYPE = 'vat_trader_company_type';

    const KEY_VAT_REQUEST_COUNTRY_CODE = 'vat_request_country_code';

    const KEY_VAT_REQUESTER_COUNTRY_CODE = 'vat_requester_country_code';
    const KEY_VAT_REQUESTER_NUMBER = 'vat_requester_number';

    const KEY_HTTP_REQUEST_HANDLE = 'handle';

    const KEY_REQUEST_MESSAGE = 'request_message';

    const KEY_WARNING = 'warning';
    const KEY_ERROR = 'error';

    /**
     * Get warning
     *
     * @return string
     */
    public function getWarning(): ?string;

    /**
     * Set warning
     *
     * @param bool $bool
     *
     * @return $this
     */
    public function setWarning(bool $bool): ValidationResultInterface;

    /**
     * Get error
     *
     * @return string
     */
    public function getError(): ?string;

    /**
     * Set error
     *
     * @param bool $bool
     *
     * @return $this
     */
    public function setError(bool $bool): ValidationResultInterface;

    /**
     * Get req message
     *
     * @return string
     */
    public function getRequestMessage(): ?string;

    /**
     * Set req message
     *
     * @param string $requestMessage
     *
     * @return $this
     */
    public function setRequestMessage(string $requestMessage): ValidationResultInterface;

    /**
     * Get handle
     *
     * @return string
     */
    public function getHandle(): ?string;

    /**
     * Set handle
     *
     * @param string $handle
     *
     * @return $this
     */
    public function setHandle(string $handle): ValidationResultInterface;

    /**
     * Get VAT Number
     *
     * @return string
     */
    public function getVatId(): ?string;

    /**
     * Set VAT Number
     *
     * @param string $vatId
     *
     * @return $this
     */
    public function setVatId(string $vatId): ValidationResultInterface;

    /**
     * Is VAT Number valid
     *
     * @return bool
     */
    public function getVatIsValid(): ?bool;

    /**
     * Set Is VAT Number valid
     *
     * @param bool $isValid
     *
     * @return $this
     */
    public function setVatIsValid(bool $isValid): ValidationResultInterface;

    /**
     * Is VAT number request successful
     *
     * @return bool
     */
    public function getVatRequestSuccess(): ?bool;

    /**
     * Set Request successful
     *
     * @param bool $success
     *
     * @return $this
     */
    public function setVatRequestSuccess(bool $success): ValidationResultInterface;

    /**
     * Get request id
     *
     * @return string
     */
    public function getVatRequestId(): ?string;

    /**
     * Set request id
     *
     * @param string|null $requestId
     *
     * @return $this
     */
    public function setVatRequestId(?string $requestId): ValidationResultInterface;

    /**
     * Get req date
     *
     * @return string
     */
    public function getVatRequestDate(): ?string;

    /**
     * Set req date
     *
     * @param string $requestDate
     *
     * @return $this
     */
    public function setVatRequestDate(string $requestDate): ValidationResultInterface;

    /**
     * Get trader name
     *
     * @return string
     */
    public function getVatTraderName(): ?string;

    /**
     * Set trader name
     *
     * @param string|null $vatTraderName
     *
     * @return $this
     */
    public function setVatTraderName(?string $vatTraderName): ValidationResultInterface;

    /**
     * Get trader address
     *
     * @return string
     */
    public function getVatTraderAddress(): ?string;

    /**
     * Set trader address
     *
     * @param string|null $vatTraderAddress
     *
     * @return $this
     */
    public function setVatTraderAddress(?string $vatTraderAddress): ValidationResultInterface;

    /**
     * Get company type
     *
     * @return string
     */
    public function getVatTraderCompanyType(): ?string;

    /**
     * Set company type
     *
     * @param string $vatTraderCompanyType
     *
     * @return $this
     */
    public function setVatTraderCompanyType(string $vatTraderCompanyType): ValidationResultInterface;

    /**
     * Get request country
     *
     * @return string
     */
    public function getVatRequestCountryCode(): ?string;

    /**
     * Set request country
     *
     * @param string $vatRequestCountryCode
     *
     * @return $this
     */
    public function setVatRequestCountryCode(string $vatRequestCountryCode): ValidationResultInterface;

    /**
     * Get requester country
     *
     * @return string
     */
    public function getRequesterCountryCode(): ?string;

    /**
     * Set requester country
     *
     * @param string $vatRequestRequesterCountryCode
     *
     * @return $this
     */
    public function setRequesterCountryCode(string $vatRequestRequesterCountryCode): ValidationResultInterface;

    /**
     * Get requester number
     *
     * @return string
     */
    public function getRequesterNumber(): ?string;

    /**
     * Set requester number
     *
     * @param string $vatRequestRequesterCountryCode
     *
     * @return $this
     */
    public function setRequesterNumber(string $vatRequestRequesterCountryCode): ValidationResultInterface;
}
