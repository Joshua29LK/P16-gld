From 47901d20512bb2e9b081d4a1b4ab8c08eb1d5ed6 Mon Sep 17 00:00:00 2001
From: nvt <nvt@medeka.nl>
Date: Wed, 24 Jul 2024 10:35:46 +0200
Subject: [PATCH] magento security patch for 34102

---
 Webapi/ServiceInputProcessor.php | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/Webapi/ServiceInputProcessor.php b/Webapi/ServiceInputProcessor.php
index a5e881f..a60f1dd 100644
--- a/Webapi/ServiceInputProcessor.php
+++ b/Webapi/ServiceInputProcessor.php
@@ -153,6 +153,7 @@ class ServiceInputProcessor implements ServicePayloadConverterInterface
      * @return \Magento\Framework\Reflection\NameFinder
      *
      * @deprecated 100.1.0
+     * @see nothing
      */
     private function getNameFinder()
     {
@@ -261,6 +262,7 @@ class ServiceInputProcessor implements ServicePayloadConverterInterface
      * @throws \Exception
      * @throws SerializationException
      * @SuppressWarnings(PHPMD.CyclomaticComplexity)
+     * @SuppressWarnings(PHPMD.NPathComplexity)
      */
     protected function _createFromArray($className, $data)
     {
@@ -268,6 +270,12 @@ class ServiceInputProcessor implements ServicePayloadConverterInterface
         // convert to string directly to avoid situations when $className is object
         // which implements __toString method like \ReflectionObject
         $className = (string) $className;
+        if (is_subclass_of($className, \SimpleXMLElement::class)
+            || is_subclass_of($className, \DOMElement::class)) {
+            throw new SerializationException(
+                new Phrase('Invalid data type')
+            );
+        }
         $class = new ClassReflection($className);
         if (is_subclass_of($className, self::EXTENSION_ATTRIBUTES_TYPE)) {
             $className = substr($className, 0, -strlen('Interface'));
-- 
2.30.2

