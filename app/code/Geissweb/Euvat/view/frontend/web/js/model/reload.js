/**
 * ||GEISSWEB| EU VAT Enhanced
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the GEISSWEB End User License Agreement
 * that is available through the world-wide-web at this URL: https://www.geissweb.de/legal-information/eula
 *
 * DISCLAIMER
 *
 * Do not edit this file if you wish to update the extension in the future. If you wish to customize the extension
 * for your needs please refer to our support for more information.
 *
 * @copyright   Copyright (c) 2015 GEISS Webl√∂sungen (https://www.geissweb.de)
 * @license     https://www.geissweb.de/legal-information/eula GEISSWEB End User License Agreement
 */

define([
    'jquery',
    'Magento_Customer/js/customer-data',
    'Magento_Checkout/js/action/get-totals',
    'Magento_Checkout/js/model/quote',
    'Magento_Checkout/js/model/cart/totals-processor/default',
    'Magento_Checkout/js/model/checkout-data-resolver',
    'Magento_Checkout/js/model/shipping-rate-registry',
    'Magento_Checkout/js/action/set-shipping-information',
    'mage/storage'
], function (
    $,
    CustomerData,
    GetTotalsAction,
    Quote,
    TotalsProcessor,
    CheckoutDataResolver,
    ShippingRateRegistry,
    SetShippingInformationAction
) {
    "use strict";

    return {

        /**
         * Reload order summary on #shipping step
         * @returns {*}
         */
        setShippingInfo: function() {
            return SetShippingInformationAction();
        },

        /**
         * Resolve estimation address on #shipping step
         */
        resolveEstimationAddress: function() {
            return CheckoutDataResolver.resolveEstimationAddress();
        },

        /**
         * Amasty checkout has this function and it is needed to call
         * because otherwise shipping methods do not reload
         */
        reloadShipping: function() {
            if(typeof ShippingRateRegistry.clearStorage === 'function') {
                ShippingRateRegistry.clearStorage();
            }

            var address = Quote.shippingAddress();
            if(typeof(address) === 'object') {
                ShippingRateRegistry.set(address.getKey(), null);
                ShippingRateRegistry.set(address.getCacheKey(), null);
                Quote.shippingAddress(address);
            }
        }
    };

});
