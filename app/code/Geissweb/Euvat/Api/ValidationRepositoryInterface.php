<?php
/**
 * ||GEISSWEB| EU VAT Enhanced
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the GEISSWEB End User License Agreement
 * that is available through the world-wide-web at this URL: https://www.geissweb.de/legal-information/eula
 *
 * DISCLAIMER
 *
 * Do not edit this file if you wish to update the extension in the future. If you wish to customize the extension
 * for your needs please refer to our support for more information.
 *
 * @copyright   Copyright (c) 2015 GEISS Weblösungen (https://www.geissweb.de)
 * @license     https://www.geissweb.de/legal-information/eula GEISSWEB End User License Agreement
 */

namespace Geissweb\Euvat\Api;

use Geissweb\Euvat\Api\Data\ValidationInterface;
use Magento\Framework\Api\SearchCriteriaInterface;
use Magento\Framework\Api\SearchResults;

/**
 * Interface ValidationRepositoryInterface
 */
interface ValidationRepositoryInterface
{
    /**
     * Save Validation
     *
     * @param \Geissweb\Euvat\Api\Data\ValidationInterface $validation
     * @return \Geissweb\Euvat\Api\Data\ValidationInterface
     * @throws \Magento\Framework\Exception\LocalizedException
     */
    public function save(
        ValidationInterface $validation
    ): ValidationInterface;

    /**
     * Retrieve Validation
     *
     * @param int $validationId
     * @return \Geissweb\Euvat\Api\Data\ValidationInterface
     * @throws \Magento\Framework\Exception\LocalizedException
     */
    public function get(int $validationId): ValidationInterface;

    /**
     * Retrieve Validation matching the specified criteria.
     *
     * @param \Magento\Framework\Api\SearchCriteriaInterface $searchCriteria
     * @return \Magento\Framework\Api\SearchResults
     * @throws \Magento\Framework\Exception\LocalizedException
     */
    public function getList(
        SearchCriteriaInterface $searchCriteria
    ): SearchResults;

    /**
     * Delete Validation
     *
     * @param \Geissweb\Euvat\Api\Data\ValidationInterface $validation
     * @return bool true on success
     * @throws \Magento\Framework\Exception\LocalizedException
     */
    public function delete(
        ValidationInterface $validation
    ): bool;

    /**
     * Delete Validation by ID
     *
     * @param int $validationId
     *
     * @return bool true on success
     * @throws \Magento\Framework\Exception\NoSuchEntityException
     * @throws \Magento\Framework\Exception\LocalizedException
     */
    public function deleteById(int $validationId): bool;

    /**
     * Get entry by VAT number
     *
     * @param string $vatId
     *
     * @return \Geissweb\Euvat\Api\Data\ValidationInterface|\Magento\Framework\Model\AbstractModel
     */
    public function getByVatId(string $vatId);
}
