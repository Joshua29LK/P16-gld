<?php
/**
 * ||GEISSWEB| EU VAT Enhanced
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the GEISSWEB End User License Agreement
 * that is available through the world-wide-web at this URL: https://www.geissweb.de/legal-information/eula
 *
 * DISCLAIMER
 *
 * Do not edit this file if you wish to update the extension in the future. If you wish to customize the extension
 * for your needs please refer to our support for more information.
 *
 * @copyright   Copyright (c) 2015 GEISS Weblösungen (https://www.geissweb.de)
 * @license     https://www.geissweb.de/legal-information/eula GEISSWEB End User License Agreement
 */

namespace Geissweb\Euvat\Api\Data;

use Magento\Framework\Api\ExtensibleDataInterface;

/**
 * This interface describes the database implementation
 */
interface ValidationInterface extends ExtensibleDataInterface
{
    const VALIDATION_ID = 'validation_id';

    const VAT_ID = 'vat_id';
    const VAT_IS_VALID = 'vat_is_valid';

    const VAT_REQUEST_SUCCESS = 'vat_request_success';
    const VAT_REQUEST_ID = 'vat_request_id';
    const VAT_REQUEST_DATE = 'vat_request_date';

    const VAT_TRADER_NAME = 'vat_trader_name';
    const VAT_TRADER_ADDRESS = 'vat_trader_address';

    const HANDLE = 'handle';
    const REQUEST_MESSAGE = 'request_message';

    /**
     * Get validation_id
     *
     * @return string|null
     */
    public function getValidationId(): ?string;

    /**
     * Set validation_id
     *
     * @param string $validationId
     *
     * @return \Geissweb\Euvat\Api\Data\ValidationInterface
     */
    public function setValidationId(string $validationId): ValidationInterface;

    /**
     * Get vat_id
     *
     * @return string|null
     */
    public function getVatId(): ?string;

    /**
     * Set vat_id
     *
     * @param string $vat_id
     *
     * @return \Geissweb\Euvat\Api\Data\ValidationInterface
     */
    public function setVatId(string $vat_id): ValidationInterface;

    /**
     * Get vat_is_valid
     *
     * @return bool
     */
    public function getVatIsValid(): ?bool;

    /**
     * Set vat_is_valid
     *
     * @param bool $vat_is_valid
     *
     * @return \Geissweb\Euvat\Api\Data\ValidationInterface
     */
    public function setVatIsValid(bool $vat_is_valid): ValidationInterface;

    /**
     * Get vat_request_success
     *
     * @return bool
     */
    public function getVatRequestSuccess(): ?bool;

    /**
     * Set vat_request_success
     *
     * @param bool $vat_request_success
     *
     * @return \Geissweb\Euvat\Api\Data\ValidationInterface
     */
    public function setVatRequestSuccess(bool $vat_request_success): ValidationInterface;

    /**
     * Get vat_request_id
     *
     * @return string|null
     */
    public function getVatRequestId(): ?string;

    /**
     * Set vat_request_id
     *
     * @param string|null $vat_request_id
     *
     * @return \Geissweb\Euvat\Api\Data\ValidationInterface
     */
    public function setVatRequestId(?string $vat_request_id): ValidationInterface;

    /**
     * Get vat_request_date
     *
     * @return string|null
     */
    public function getVatRequestDate(): ?string;

    /**
     * Set vat_request_date
     *
     * @param string $vat_request_date
     *
     * @return \Geissweb\Euvat\Api\Data\ValidationInterface
     */
    public function setVatRequestDate(string $vat_request_date): ValidationInterface;

    /**
     * Get vat_trader_name
     *
     * @return string|null
     */
    public function getVatTraderName(): ?string;

    /**
     * Set vat_trader_name
     *
     * @param string|null $vat_trader_name
     *
     * @return \Geissweb\Euvat\Api\Data\ValidationInterface
     */
    public function setVatTraderName(?string $vat_trader_name): ValidationInterface;

    /**
     * Get vat_trader_address
     *
     * @return string|null
     */
    public function getVatTraderAddress(): ?string;

    /**
     * Set vat_trader_address
     *
     * @param string|null $vat_trader_address
     *
     * @return \Geissweb\Euvat\Api\Data\ValidationInterface
     */
    public function setVatTraderAddress(?string $vat_trader_address): ValidationInterface;

    /**
     * Get handle
     *
     * @return string|null
     */
    public function getHandle(): ?string;

    /**
     * Set handle
     *
     * @param string|null $handle
     *
     * @return \Geissweb\Euvat\Api\Data\ValidationInterface
     */
    public function setHandle(?string $handle): ValidationInterface;

    /**
     * Get request_message
     *
     * @return string|null
     */
    public function getRequestMessage(): ?string;

    /**
     * Set request_message
     *
     * @param string $request_message
     *
     * @return \Geissweb\Euvat\Api\Data\ValidationInterface
     */
    public function setRequestMessage(string $request_message): ValidationInterface;
}
